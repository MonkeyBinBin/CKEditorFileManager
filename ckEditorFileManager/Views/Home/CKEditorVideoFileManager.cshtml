@using ckEditorFileManager.Enums
@model List<string>
@{
    Layout = null;
    VideoTypeEnum videoType;
    string viewDataVideoType = ViewData["videoType"] == null ? string.Empty : ViewData["videoType"].ToString();
    bool isAcceptType = Enum.TryParse<VideoTypeEnum>(viewDataVideoType, out videoType);
    string allowedFileExtension = string.Empty;
    switch (videoType)
    {
        case VideoTypeEnum.Mp4:
            allowedFileExtension = "mp4,mov";
            break;
        case VideoTypeEnum.WebM:
            allowedFileExtension = "webm";
            break;
        default:
            break;
    }

    //get web config MaxRequestLength setting
    System.Web.Configuration.HttpRuntimeSection sectionHttpRuntime
        = System.Configuration.ConfigurationManager.GetSection("system.web/httpRuntime") as System.Web.Configuration.HttpRuntimeSection;

}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>CKEditor檔案管理</title>
    @Styles.Render("~/Content/ckeditor")
    @Styles.Render("~/Content/fileinput")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/fileManager")
    <script>
        $(function () {
            var allowedFileExtension = "@allowedFileExtension".split(',');

            //file upload plugin
            $("#inputFileupload").fileinput({
                maxFileSize: @sectionHttpRuntime.MaxRequestLength,
                uploadUrl: "@Url.Action("CKEditorFileUpload", "Home")",
                allowedFileExtensions: allowedFileExtension,
                browseClass: "btn btn-primary",
                showClose: false,
                uploadAsync: false,
                autoReplace: true,
                fileActionSettings: {
                    showZoom: false
                }
            }).on('filebatchuploadsuccess', function (event, data, previewId, index) {
                var form = data.form, files = data.files, extra = data.extra,
                    response = data.response, reader = data.reader;

                //更新清單
                if (response !== undefined) {
                    var container = $("#FileContainer");
                    var files = response.files;
                    for (var i = 0; i < files.length; i++) {
                        var file = files[i];
                        var sourceType = $("#FileContainer").attr("data-video-type");
                        var fileContentHtml = "<div class=\"FileItemContainer\" data-filename=\"" + file.FileName + "\"><video width=\"200\" height=\"150\" controls><source src=\"" + file.FilePath + file.FileName + "\"></video><p>" + file.FileName + "</p><input type=\"button\" class=\"btn btn-danger btn-block\" value=\"刪除\" /><div>";
                        container.prepend(fileContentHtml);
                    }
                }

                //關閉上傳視窗#UploadModal
                $('#UploadModal').modal('hide');
            });

            //確定
            $(document).on("click", "#btnOk", function () {
                var selectedItem = $(".FileItemContainer.selected");
                if (selectedItem.length > 0) {
                    setSelectedUrl(selectedItem.find("video > source").attr("src"));
                } else {
                    if (confirm("尚未選取影片\n按下「確定」關閉視窗\n按下「取消」重新選擇影片"))
                        window.close();
                }
            });

            //取消
            $(document).on("click", "#btnCancel,#btnClose", function () {
                window.close();
            });

            //影片點選事件
            $(document).on("click", ".FileItemContainer > *:not(input:button)", function () {

                if (!$(this).parent(".FileItemContainer").hasClass("selected")) {
                    $(".FileItemContainer.selected").toggleClass("selected");
                }
                $(this).parent(".FileItemContainer").toggleClass("selected");
            });

            //上傳檔案modal視窗 相關事件
            $('#UploadModal').on('hidden.bs.modal', function (e) {
                //初始化檔案上傳控制項
                $("#inputFileupload").fileinput("clear");
            });

            //搜尋文字輸入文字事件
            $(document).on("keyup","#searchText",function(event){
                $(".FileItemContainer.selected").removeClass("selected");

                var searchText=$(this).val();
                if(searchText===""){
                    $(".FileItemContainer").fadeIn(500);
                }else{
                    $(".FileItemContainer[data-filename*='"+searchText+"']").fadeIn(500);
                    $(".FileItemContainer:not([data-filename*='"+searchText+"'])").fadeOut(500);
                }
            });

            //清除輸入的搜尋文字
            $(document).on("click","#btnClearSearchText",function(){
                $("#searchText").val("");
                $(".FileItemContainer").fadeIn(500);
            });

            //刪除檔案
            $(document).on("click",".FileItemContainer > input:button",function(event){
                var container=$(this).parent(".FileItemContainer");
                var filename=container.attr("data-filename");
                if(confirm("確定刪除「"+filename+"」？")){
                    container.removeClass("selected");
                    $.post("@Url.Action("CKEditorFileDelete","Home")",{fileName:filename},function(result){
                        if(result.IsSuccess){
                            container.remove();
                        }else{
                            alert("刪除失敗-"+result.Message);
                        }
                    });
                }
            });
        });

        //回填資料至CKEditor設定欄位
        function setSelectedUrl(url) {
            var funcNum = $("#requestCKEditorFuncNum").val();
            window.opener.CKEDITOR.tools.callFunction(funcNum, url);
            window.close();
        }

    </script>
</head>
<body>
    @if (isAcceptType)
    {
        string headerDisplay = string.Empty;
        string sourceType = string.Empty;
        switch (videoType)
        {
            case VideoTypeEnum.Mp4:
                headerDisplay = "MP4";
                sourceType = "video/mp4";
                break;
            case VideoTypeEnum.WebM:
                headerDisplay = "WebM";
                sourceType = "video/webm";
                break;
        }
        <div class="navbar navbar-default navbar-fixed-top">
            <div class="container">
                <div class="navbar-header">
                    <div class="navbar-brand"><span class="glyphicon glyphicon-folder-open"></span>&nbsp;@String.Format("{0} {1}", headerDisplay, "影片檔案管理")</div>
                </div>
                <div class="row">
                    <div class="col-md-4" style="padding:8px 0;">
                        <div class="input-group">
                            <div class="input-group-btn">
                                <button type="button" class="btn btn-default" aria-label="Bold"><span class="glyphicon glyphicon-search"></span></button>
                            </div>
                            <input type="text" id="searchText" class="form-control" />
                            <div class="input-group-btn">
                                <button type="button" id="btnClearSearchText" class="btn btn-danger" aria-label="Bold"><span class="glyphicon glyphicon-trash"></span></button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4" style="padding:8px;">
                        <input type="button" id="btnUpload" class="btn btn-warning" value="上傳檔案" data-toggle="modal" data-target="#UploadModal" />
                        <input type="button" id="btnOk" class="btn btn-primary" value="確定" />
                        <input type="button" id="btnCancel" class="btn btn-danger" value="取消" />
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid">
            @Html.Hidden("requestCKEditorFuncNum", ViewData["CKEditorFuncNum"], new { @id = "requestCKEditorFuncNum" })
            <div class="row">
                <div class="col-md-12" role="main" id="FileContainer" data-video-type="@sourceType">
                    @if (this.Model != null && this.Model.Count > 0)
                    {
                        foreach (var item in this.Model)
                        {
                            <div class="FileItemContainer" data-filename="@Path.GetFileName(item)">
                                <video width="200" height="150" controls>
                                    <source src="@Url.Content(item)" type="@sourceType">
                                </video>
                                <p>@Path.GetFileName(item)</p>
                                <input type="button" class="btn btn-danger btn-block" value="刪除" />
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="container-fluid">
            <h1>影片類型不正確</h1>
            <input type="button" id="btnClose" class="btn btn-danger" value="關閉視窗" />
        </div>
    }

    <div id="UploadModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <input id="inputFileupload" name="file" type="file" accept="video/mp4,video/x-m4v,video/*">
            </div>
        </div>
    </div>
</body>
</html>
